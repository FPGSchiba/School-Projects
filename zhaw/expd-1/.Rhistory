barplot(anz_dat, rnames = herk_dat)
barplot(anz_dat, rlab = herk_dat)
row.names(anz_dat) <- herk_dat
row.names(anz_dat) <- herk_dat
barplot(anz_dat)
herk_dat
row.names(anz_dat) <- herk_dat
barplot(anz_dat)
anz_dat
df <- data.frame(anz_dat)
df
rownames(df) <- herk_dat
barplot(anz_dat)
df
barplot(df)
barplot(df)
barplot(df$anz_dat)
v > 175
# ---- Logische Vektoren ----
v <- c(160, 145, 195, 173, NA, 181)
v > 175
!(v > 175)
v[v.> 174]
# ---- Logische Vektoren ----
v <- c(160, 145, 195, 173, NA, 181)
v[v.> 174]
v[v > 174]
v == 160
v > 160 | v < 190
which(v > 175)
which.min(v > 175)
which.min(v)
v[which.min(v)]
all(v > 175)
any(v < 190)
all(v < 190)
any(v > 175)
is.na(v)
v <- v[!is.na(v)]
v
v > 160 & v < 190
# ---- Logische Vektoren ----
v <- c(160, 145, 195, 173, NA, 181)
v > 160 & v < 190
v <- v[!is.na(v)]
v
?which
all(v < 120)
# ---- Logische Vektoren ----
v <- c(160, 145, 195, 173, NA, 181)
all(v < 120)
all(v < 120, na.rm = T)
any(v > 175)
is.na(v)
# ---- Zeichketten ----
namen <- c("Urs", "Anna", "Max", "Pia", "Maaike")
nachar(namen)
nchar(namen)
substring(namen, 1, 2)
paste(namen, 1:5, sep = "_")
paste(namen, 1:length(namen), sep = "_")
paste(namen, "Z.", sep = " ")
paste(namen, c("Z.", "M."), sep=" ")
test <- paste(namen, collapse = " ")
test
length(namen)
length(test)
tolower(namen)
toupper(namen)
grep(pattern = "a", x=namen)
test <- grepl(pattern="i", namen)
test
sum(test)
sub(pattern="a", replacement = ".", tolower(namen))
gsub(pattern="a", replacement = ".", tolower(namen))
wirte.table(x=namen, file="namen.csv", sep=",", col.names=T, fileEncoding="UTF-8")
# ---- Daten Speichern ----
wirte.table(x=namen, file="namen.csv", sep=",", col.names=T, fileEncoding="UTF-8")
install.packages("openxlsx", dependencies = T)
library(openxlsx)
write.xlsx(x = namen, file = "namen.xlsx")
# ---- Aufgabe 1 ----
kiebitz <- read.table(file="./data/kiebitz.txt", sep=",", header = T)
kiebitz
feld_nr <- kiebitz[kiebitz$Feld.Nr == 1411,]
feld_nr
feld_nr_1411 <- kiebitz[kiebitz$Feld.Nr == 1411,]
feld_nr_1441
feld_nr_1411
feld_nr_1411[kiebitz$Taetigkeit == "fr"]
feld_nr_1411[kiebitz$Taetigkeit == "fr"]
feld_nr_1411 <- kiebitz[kiebitz$Feld.Nr == 1411,]
feld_nr_1411
feld_nr_1411[kiebitz$Taetigkeit == "fr",]$Anzahl
feld_nr_1411[kiebitz$Taetigkeit == "fr",]
feld_nr_1411[feld_nr$Taetigkeit == "fr",]
feld_nr_1411[feld_nr$Taetigkeit == "fr",]$Anzahl
kiebitz
ruhend <- kiebitz[kiebitz$Taetigkeit == "ru",]
ruhend
ruhend[where.max(ruhend$Anzahl)]
ruhend[where.max(ruhend$Anzahl),]
ruhend[which.max(ruhend$Anzahl),]
klasse <- read.xlsx("./data/datDS23t_raw.xlsx")
klasse
# ---- Aufgabe 2 ----
# A
klasse_raw <- read.xlsx("./data/datDS23t_raw.xlsx")
klasse_raw
klasse <- klasse_raw[,!"Antworten"]
klasse <- klasse_raw[,colnames(klasse_raw)]
klasse <- subset(klasse_raw, select = -"Antworten")
klasse
klasse <- klasse_raw[, -which(names(klasse_raw) == "Antworten")]
klasse
colnames(klasse) <- gsub("Q00_", "", names(klasse))
klasse
colnames(klasse) <- gsub(" ", "_", names(klasse))
colnames(klasse) <- tolower(names(klasse))
klasse
colnames(klasse) <- gsub(".", "_", names(klasse))
colnames(klasse) <- tolower(names(klasse))
klasse
# ---- Aufgabe 2 ----
# A
klasse_raw <- read.xlsx("./data/datDS23t_raw.xlsx")
klasse <- klasse_raw[, -which(names(klasse_raw) == "Antworten")]
colnames(klasse) <- gsub("Q00_", "", names(klasse))
colnames(klasse) <- gsub(" ", "_", names(klasse))
colnames(klasse) <- tolower(names(klasse))
klasse
colnames(klasse) <- gsub("\.", "_", names(klasse))
colnames(klasse) <- tolower(names(klasse))
klasse
str(klasse)
as.numeric(klasse$koerpergroesse)
as.numeric(klasse$sport)
klasse$koerpergroesse <- as.numeric(klasse$koerpergroesse)
klasse$sport <- as.numeric(klasse$sport)
klasse$alter <- as.numeric(klasse$alter)
klasse
str(klasse)
# C
boxplot(klasse$koerpergroesse)
# D
table(klasse$koerpergroesse[klasse$koerpergroesse > 190,])
# D
table(klasse$koerpergroesse[klasse$koerpergroesse > 190])
# E
mad(klasse$koerpergroesse)
# E
mad(klasse$koerpergroesse, na.rm = T)
# F
blond_sport <- klasse$sport[klasse$haarfarbe == "blond",]
# F
blond_sport <- klasse[klasse$haarfarbe == "blond",]
braun_sport <- klasse[klasse$haarfarbe == "braun",]
black_sport <- klasse[klasse$haarfarbe == "schwarz",]
median(blond_sport$sport) > median(braun_sport$sport)
median(black_sport$sport) > median(braun_sport$sport)
# F
str(klasse)
median(blond_sport$sport) > median(braun_sport$sport)
median(black_sport$sport) > median(braun_sport$sport)
klasse
csv_path <- paste(getwd(), '/data/BEV322OD3222.csv', sep='')
dat <- read.csv(csv_path)
str(dat)
dat
# G
v_sel <- klasse[klasse$alter < 22 &
klasse$schlafzimmer == "1. Stock" &
(klasse$anreisezeit.an.die.zhaw >= 50 |
klasse$handspanne > 20),]
vsel
v_sel
v_sel[,!is.na]
v_sel[!is.na,]
all(v_sel)
v_sel <- v_sel[!rowSums(is.na(v_sel[-1])),]
v_sel
count(v_sel)
length(v_sel)
dim(v_sel)
# H
IQR(klasse$alter)
mad(klasse$alter)
var(klasse$alter)
# H
IQR(klasse$alter, na.rm = T)
mad(klasse$alter, na.rm = T)
var(klasse$alter, na.rm = T)
klasse$alter[where.min(klasse$alter)] <- NA
klasse$alter[which.min(klasse$alter)] <- NA
klasse$alter[which.max(klasse$alter)] <- NA
IQR(klasse$alter, na.rm = T)
mad(klasse$alter, na.rm = T)
var(klasse$alter, na.rm = T)
# I
klasse$ratHKgr <- NA
?which
klein_sel <- which(klasse$handspanne / klasse$koerpergroesse <= 0.11)
klein_sel <- which((klasse$handspanne / klasse$koerpergroesse) <= 0.11)
str(klasse)
as.numeric(klasse$handspanne)
klein_sel <- which((klasse$handspanne / klasse$koerpergroesse) <= 0.11)
klasse$handspanne <- as.numeric(klasse$handspanne)
klein_sel <- which((klasse$handspanne / klasse$koerpergroesse) <= 0.11)
mittel_sel <- which(11 < (klasse$handspanne / klasse$koerpergroesse) <= 0.12)
klasse$ratHKgr <- klein_sel["klein"]
klasse$ratHKgr
klasse$ratHKgr[klein_sel] <- "klein"
klasse$ratHKgr
klein_sel <- which((klasse$handspanne / klasse$koerpergroesse) <= 0.11)
mittel_sel <- which(11 < (klasse$handspanne / klasse$koerpergroesse) & (klasse$handspanne / klasse$koerpergroesse) <= 0.12)
gross_sel <- which((klasse$handspanne / klasse$koerpergroesse) > 0.12)
klasse$ratHKgr[klein_sel] <- "klein"
klasse$ratHKgr[mittel_sel] <- "mittel"
klasse$ratHKgr[gross_sel] <- "gross"
klasse$ratHKgr
klein_sel
mittel_sel
gross_sel
klein_sel
mittel_sel
gross_sel
klein_sel <- which((klasse$handspanne / klasse$koerpergroesse) <= 0.11)
mittel_sel <- which(0.11 < (klasse$handspanne / klasse$koerpergroesse) & (klasse$handspanne / klasse$koerpergroesse) <= 0.12)
gross_sel <- which((klasse$handspanne / klasse$koerpergroesse) > 0.12)
klein_sel
mittel_sel
gross_sel
klasse$ratHKgr[klein_sel] <- "klein"
klasse$ratHKgr[mittel_sel] <- "mittel"
klasse$ratHKgr[gross_sel] <- "gross"
klasse$ratHKgr
# J
klasse$ID <- paste(c(klasse$sport, klasse$alter, klasse$postleitzahl), sep = "-")
# J
klasse$ID <- klasse[paste(klasse$sport, klasse$alter, klasse$postleitzahl, sep = "-"),]
klasse$ID
# ---- Aufgabe 2 ----
# A
klasse_raw <- read.xlsx("./data/datDS23t_raw.xlsx")
klasse_raw
df <- df[, -which(names(df) == "column_name_to_remove")]
klasse <- klasse_raw[, -which(names(klasse_raw) == "Antworten")]
colnames(klasse) <- gsub("Q00_", "", names(klasse))
colnames(klasse) <- gsub("\s", "_", names(klasse))
colnames(klasse) <- tolower(names(klasse))
klasse
# B
str(klasse)
klasse$koerpergroesse <- as.numeric(klasse$koerpergroesse)
klasse$sport <- as.numeric(klasse$sport)
klasse$alter <- as.numeric(klasse$alter)
str(klasse)
# C
boxplot(klasse$koerpergroesse)
# D
table(klasse$koerpergroesse[klasse$koerpergroesse > 190])
# E
mad(klasse$koerpergroesse, na.rm = T)
# F
str(klasse)
klasse
blond_sport <- klasse[klasse$haarfarbe == "blond",]
braun_sport <- klasse[klasse$haarfarbe == "braun",]
black_sport <- klasse[klasse$haarfarbe == "schwarz",]
median(blond_sport$sport) > median(braun_sport$sport)
median(black_sport$sport) > median(braun_sport$sport)
# G
v_sel <- klasse[klasse$alter < 22 &
klasse$schlafzimmer == "1. Stock" &
(klasse$anreisezeit.an.die.zhaw >= 50 |
klasse$handspanne > 20),]
v_sel <- v_sel[!rowSums(is.na(v_sel[-1])),]
dim(v_sel)
# H
IQR(klasse$alter, na.rm = T)
mad(klasse$alter, na.rm = T)
var(klasse$alter, na.rm = T)
klasse$alter[which.min(klasse$alter)] <- NA
klasse$alter[which.max(klasse$alter)] <- NA
IQR(klasse$alter, na.rm = T)
mad(klasse$alter, na.rm = T)
var(klasse$alter, na.rm = T)
# I
klasse$ratHKgr <- NA
?which
klasse$handspanne <- as.numeric(klasse$handspanne)
klein_sel <- which((klasse$handspanne / klasse$koerpergroesse) <= 0.11)
mittel_sel <- which(0.11 < (klasse$handspanne / klasse$koerpergroesse) & (klasse$handspanne / klasse$koerpergroesse) <= 0.12)
gross_sel <- which((klasse$handspanne / klasse$koerpergroesse) > 0.12)
klein_sel
mittel_sel
gross_sel
klasse$ratHKgr[klein_sel] <- "klein"
klasse$ratHKgr[mittel_sel] <- "mittel"
klasse$ratHKgr[gross_sel] <- "gross"
klasse$ratHKgr
# J
klasse$ID <- klasse[paste(klasse$sport, klasse$alter, klasse$postleitzahl, sep = "-"),]
klasse$ID
klasse <- klasse_raw[, -which(names(klasse_raw) == "Antworten")]
colnames(klasse) <- gsub("Q00_", "", names(klasse))
colnames(klasse) <- gsub("\s", "_", names(klasse))
colnames(klasse) <- tolower(names(klasse))
klasse
# B
str(klasse)
klasse$koerpergroesse <- as.numeric(klasse$koerpergroesse)
klasse$sport <- as.numeric(klasse$sport)
klasse$alter <- as.numeric(klasse$alter)
str(klasse)
# C
boxplot(klasse$koerpergroesse)
# D
table(klasse$koerpergroesse[klasse$koerpergroesse > 190])
# E
mad(klasse$koerpergroesse, na.rm = T)
# F
str(klasse)
klasse
blond_sport <- klasse[klasse$haarfarbe == "blond",]
braun_sport <- klasse[klasse$haarfarbe == "braun",]
black_sport <- klasse[klasse$haarfarbe == "schwarz",]
median(blond_sport$sport) > median(braun_sport$sport)
median(black_sport$sport) > median(braun_sport$sport)
# G
v_sel <- klasse[klasse$alter < 22 &
klasse$schlafzimmer == "1. Stock" &
(klasse$anreisezeit.an.die.zhaw >= 50 |
klasse$handspanne > 20),]
v_sel <- v_sel[!rowSums(is.na(v_sel[-1])),]
dim(v_sel)
# H
IQR(klasse$alter, na.rm = T)
mad(klasse$alter, na.rm = T)
var(klasse$alter, na.rm = T)
klasse$alter[which.min(klasse$alter)] <- NA
klasse$alter[which.max(klasse$alter)] <- NA
IQR(klasse$alter, na.rm = T)
mad(klasse$alter, na.rm = T)
var(klasse$alter, na.rm = T)
# I
klasse$ratHKgr <- NA
?which
klasse$handspanne <- as.numeric(klasse$handspanne)
klein_sel <- which((klasse$handspanne / klasse$koerpergroesse) <= 0.11)
mittel_sel <- which(0.11 < (klasse$handspanne / klasse$koerpergroesse) & (klasse$handspanne / klasse$koerpergroesse) <= 0.12)
gross_sel <- which((klasse$handspanne / klasse$koerpergroesse) > 0.12)
klein_sel
mittel_sel
gross_sel
klasse$ratHKgr[klein_sel] <- "klein"
klasse$ratHKgr[mittel_sel] <- "mittel"
klasse$ratHKgr[gross_sel] <- "gross"
klasse$ratHKgr
# J
klasse$ID <- klasse[paste(klasse$sport, klasse$alter, klasse$postleitzahl, sep = "-"),"ID"]
klasse$ID
paste(klasse$sport, klasse$alter, klasse$postleitzahl, sep = "-")
# J
klasse$ID <- paste(klasse$sport, klasse$alter, klasse$postleitzahl, sep = "-")
klasse$ID
# K
write.xlsx(klasse, "./data/selfOutpu.xlsx")
csv_path <- paste(getwd(), '/data/BEV322OD3222.csv')
dat <- read.csv('.//data/BEV322OD3222.csv')
str(dat)
dat
plot(dat$AnzBestWir, type = "o")
plot(dat$AnzBestWir,type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
lines(t, type = "o", col = "blue")
str(dat)
unbekannt <- dat[dat$SexLang == "unbekannt",]
unbekannt
unbekannt_schweizer <- unbekannt[unbekannt$HerkunftCd == 1,]
unbekannt_ausländer <- unbekannt[unbekannt$HerkunftCd == 2,]
plot(unbekannt_schweizer$AnzBestWir,type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
?plot
?plot
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Schweizer Bevölkerung in der Stadt Zürich",
main = "Rain fall chart")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Schweizer Bevölkerung in der Stadt Zürich",
main = "Rain fall chart")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Rain fall chart")
plot(x=unbekannt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
lines(unbekannt_ausländer$AnzBestWir, type = "o", col = "blue")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer, unbekannt_ausländer), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer, unbekannt_ausländer), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
?cbind
matplot(unbekannt$StichtagDatJahr, c(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
matplot(unbekannt$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
length(unbekannt_schweizer)
length(unbekannt_ausländer)
length(unbekannt_schweizer$AnzBestWir)
length(unbekannt_ausländer$AnzBestWir)
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
legend("topright", legend = c("Schweizer", "Ausländer"),
col = c("red", "blue"),
lty = 1)
herk_sex_bev <- dat[dat$SexLang != "unbekannt",]
bev_schweizer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 1,]
bev_ausländer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 2,]
bev_schweizer_m <- bev_schweizer[bev_ausländer$SexCd == 1,]
bev_schweizer_w <- bev_schweizer[bev_ausländer$SexCd == 2,]
herk_sex_bev <- dat[dat$SexLang != "unbekannt",]
bev_schweizer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 1,]
bev_ausländer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 2,]
bev_schweizer_m <- bev_schweizer[bev_ausländer$SexCd == 1,]
bev_schweizer_w <- bev_schweizer[bev_ausländer$SexCd == 2,]
bev_ausländer_m <- bev_ausländer[bev_ausländer$SexCd == 1,]
bev_ausländer_w <- bev_ausländer[bev_ausländer$SexCd == 2,]
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
legend("topright", legend = c("Schweizer", "Schweizerinnen", "Ausländer", "Ausländerinnen"),
col = c("red", "blue", "green4", "orange"),
lty = 1)
nt_schweizer$StichtagDatJahr, y=unbekannt_schweizer$AnzBestWir, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
legend("topright", legend = c("Schweizer", "Ausländer"),
col = c("red", "blue"),
lty = 1)
herk_sex_bev <- dat[dat$SexLang != "unbekannt",]
bev_schweizer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 1,]
bev_ausländer <- herk_sex_bev[herk_sex_bev$HerkunftCd == 2,]
bev_schweizer_m <- bev_schweizer[bev_ausländer$SexCd == 1,]
bev_schweizer_w <- bev_schweizer[bev_ausländer$SexCd == 2,]
bev_ausländer_m <- bev_ausländer[bev_ausländer$SexCd == 1,]
bev_ausländer_w <- bev_ausländer[bev_ausländer$SexCd == 2,]
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
legend("topright", legend = c("Schweizer", "Schweizerinnen", "Ausländer", "Ausländerinnen"),
col = c("red", "blue", "green4", "orange"),
lty = 1)
gesamt_bev <- c(unbekannt_ausländer$AnzBestWir + unbekannt_schweizer$AnzBestWir, bev_schweizer_m + bev_schweizer_w + bev_ausländer_m + bev_ausländer_w)
plot(x=dat$StichtagDatJahr, y=gesamt_bev, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
str(unbekannt_ausländer)
test <- unbekannt_ausländer$AnzBestWir + unbekannt_schweizer$AnzBestWir
test
bekannt_gesamt <- bev_schweizer_m + bev_schweizer_w + bev_ausländer_m + bev_ausländer_w
unbekannt_gesamt <- unbekannt_ausländer$AnzBestWir + unbekannt_schweizer$AnzBestWir
bekannt_gesamt <- bev_schweizer_m$AnzBestWir + bev_schweizer_w$AnzBestWir + bev_ausländer_m$AnzBestWir + bev_ausländer_w$AnzBestWir
gesamt_bev <- c(unbekannt_gesamt, bekannt_gesamt)
plot(x=dat$StichtagDatJahr, y=gesamt_bev, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
duplicated(dat$StichtagDatJahr)
plot(x=dat$StichtagDatJahr[duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
dat$StichtagDatJahr[duplicated(dat$StichtagDatJahr)]
length(dat$StichtagDatJahr[duplicated(dat$StichtagDatJahr)])
length(gesamt_bev)
length(dat$StichtagDatJahr[duplicated(dat$StichtagDatJahr)])
length(dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)])
plot(x=dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "o",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
plot(x=dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "l",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
median(gesamt_bev)
mean(gesamt_bev)
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Multiple Lines Plot")
matplot(unbekannt_schweizer$StichtagDatJahr, cbind(unbekannt_schweizer$AnzBestWir, unbekannt_ausländer$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Stadt Zürich Bevölkerung")
matplot(bev_schweizer_m$StichtagDatJahr, cbind(bev_schweizer_m$AnzBestWir, bev_schweizer_w$AnzBestWir, bev_ausländer_m$AnzBestWir, bev_ausländer_w$AnzBestWir), type = "l", lty = 1,
col = c("red", "blue", "green4", "orange"), xlab = "Jahr",
ylab = "Bevölkerungsanzahl", main = "Stadt Zürich Bevölkerung (ab 1933, bis 2022)")
legend("topright", legend = c("Schweizer", "Schweizerinnen", "Ausländer", "Ausländerinnen"),
col = c("red", "blue", "green4", "orange"),
lty = 1)
plot(x=dat$StichtagDatJahr[!duplicated(dat$StichtagDatJahr)], y=gesamt_bev, type = "l",col = "red", xlab = "Jahr", ylab = "Anzahl Einwohner",
main = "Bevölkerung der Stadt Zürich")
str(dat)
dat <- read.csv('./data/BEV322OD3222.csv')
str(dat)
