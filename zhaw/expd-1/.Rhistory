# Aufgabe 1 ----
5+3
3-1
5*2
11/3
log(2)
log(-2)
va<-2
va
vb<-3
vb
vc<-va*vb
vc
va<-4
vc
vc<-va*vb
vc
vb<-'hallo'
vb
vc<-va*vb
log(15)
8^7
# Aufgabe 2 ----
1:5
v<-1:5
v
length(x=v)
help(length)
5*v
y<-c(3,8,9,100,200)
v*y
sum(v*y)
z<-seq(from=0,to=0.2,by=0.05)
names(z)
names(z)<-c("Element1","Element2","Element3","Element4","Element5")
names(z)
sum(z)
min(y)
sum(1:1000)
m1<-matrix(data=v,nrow=3,ncol=4,byrow=FALSE)
m1
help(matrix)
m2<-matrix(data=v,nrow=3)
m2 #WasistderUnterschiedzum1?
nrow(m1)
ncol(m1)
dim(m1)
dim(m2)
colnames(m1)
rownames(m1)
colnames(m1)<-c("Spalte1","Spalte2","Spalte3","Spalte4")
rownames(m1)<-c("Zeile1","Zeile2","Zeile3")
m1
2*m1
m1-m2
m1*m2
m3<-matrix(data=1:8,ncol=2,byrow=TRUE)
m1*m3
range(vec4)
range(1:6)
rep(1:6, 3)
matrix(rep(1:8, 5), nrow=8, byrow=TRUE)
matrix(rep(1:8, 5), nrow=8, byrow=FALSE)
rownames(m4) <- c("1", "2", "3", "4", "5", "6", "7", "8")
m4 <- matrix(rep(1:8, 5), nrow=8, byrow=FALSE)
rownames(m4) <- c("1", "2", "3", "4", "5", "6", "7", "8")
colnames(m4) <- c("Zeile 1", "Zeile 2", "Zeile 3", "Zeile 4", "Zeile 5")
m4
m4
rownames(m4) <- c("Reihe 1", "Reihe 2", "Reihe 3", "Reihe 4", "Reihe 5", "Reihe 6", "Reihe 7", "Reihe 8")
colnames(m4) <- c("Zeile 1", "Zeile 2", "Zeile 3", "Zeile 4", "Zeile 5")
m4
rownames(m4) <- c("1ner", "2er", "3er", "4er", "5er", "6er", "7er", "8er")
colnames(m4) <- c("Zeile 1", "Zeile 2", "Zeile 3", "Zeile 4", "Zeile 5")
m4
q()
sternzeichen<-c("Waage","Waage","Krebs","Wassermann","Schuetze", "Zwillinge","Stier","Wassermann","Waage","Loewe", "Steinbock","Krebs","Zwillinge","Steinbock","Waage", "Steinbock","Zwillinge","Waage","Zwillinge","Wassermann")
table(sternzeichen) #AbsoluteHäufigkeiten
sternzeichen
table(sternzeichen)/length(sternzeichen)#RelativeHäufigkeiten
cumsum(1:10)
barplot(table(sternzeichen))
barplot(table(sort(sternzeichen)))
barplot(table(sternzeichen))
?barplot
barplot(table(sternzeichen), horiz = TRUE)
barplot(table(sternzeichen), horiz = FALSE)
barplot(table(sternzeichen))
?barplot
pie(table(sternzeichen))
barplot(sort(table(sternzeichen)))
table(hobbies)/ length(hobbies)
hobbies = c("f", "f", "f", "f", "f", "b", "b", "i", "i", "i", "i", "i", "i", "i", "s", "l", "l", "l", "g", "g", "g", "g")
table(hobbies)
table(hobbies)/ length(hobbies)
length(hobbies)
table(hobbies)/ length(hobbies)
barplot(table(hobbies))
# ---- Datentypen ----
typeof(5)
typeof(5L)
pi
typeof(pi)
mode(pi)
typeof(1:12)
mode(1:12)
typeof("Zeichenkette")
typeof(TRUE)
mode(FALSE)
letters
namen <- c("Urs", "Anna", "Max", "Pia", "Maaike")
length(letters)
LETTERS
farben <- c('rot', 'blau', 'gelb', 'rot')
farben
typeof(farben)
# Character -> Faktoren
farben_kat <- as.factor(farben)
farben_kat
typeof(farben_kat)
levels(farben_kat)
# Faktor -> character
farben_char <- as.character(farben_kat)
farben_char
typeof(farben_char)
Nummern <- c("7", '12', '8', '1')
as.numeric(Nummern)
as.character(1:10)
x
# Logische Datentypen
x <- c(TRUE, FALSE, TRUE, TRUE)
x
a <- c(3.1, 5.0, -0.7, 0.9, 1-7)
a <= 2
(a > 2) & (a < 5)
(a > 2) | (a < 5)
# Data Frames
dat <- data.frame(
name=c("Urs", 'Anna', 'Max'),
punkte=c(3, 5, 7),
weiblich=c(FALSE, TRUE, FALSE))
dat
head(dat, n=2)
dim(dat)
colnames(dat)
str(dat)
dat$name
max(dat$punkte)
getwd() # Working Directory
dat_path <- getwd() + '/data/datDS23t_raw.rds'
dat_path
dat_path <- paste(getwd(), '/data/datDS23t_raw.rds')
dat_path
dat_path <- paste(getwd(), '/data/datDS23t_raw.rds', sep='')
dat_path
dat <- readRDS(dat_path)
dat
tab <- table(dat$Q00_Programmierkenntnisse)
barplot(tab, main = 'Programmierkentnisse', ylab='Absolute Häufigkeit', las=2)
barplot(tab, main = 'Programmierkentnisse', ylab='Absolute Häufigkeit')
barplot(factor(tab), main = 'Programmierkentnisse', ylab='Absolute Häufigkeit')
barplot(as.factor(tab), main = 'Programmierkentnisse', ylab='Absolute Häufigkeit')
typeof(w)
w<-c(1:5,2)
typeof(w)
typeof(x)
y<-c(TRUE,FALSE,TRUE,TRUE)
typeof(y)
typeof(z)
typeof(z_f)
z<-c("Marie","Betty","Peter","Peter")
typeof(z)
z_f<-as.factor(z)
typeof(z_f)
u<-(w<=2)
u
mode(u)
as.numeric(u)
as.character(u)
as.character(z_f)
as.numeric(z_f)
as.numeric(z)
unique(z_f)
unique(w)
?unique
# ---- Aufgabe 2 ----
?seq
seq(95, -5, -5)
letters*2
lets <- c(letters, letters)
sort(lets)
z_f<-as.factor(z) # Ordinal
typeof(z_f)
vec<-c(10, 9:10, 8:10, 7:10, 6:10, 5:10, 4:10, 3:10, 2:10, 1:10)
vec
sort(vec)
for (i in 1:10) {
vec<-(vec, i:10)
vec<-c(vec, i:10)
vec<-c(vec, x:10)
for (x in 1:10) {
vec<-c(vec, x:10)
}
sort(vec)
rep(1:10, 1:10)
?rep
rep(1:4, 2)
rep(1:4, c(2,1,2,1))
matrix(seq(3, 75, 3))
matrix(seq(3, 75, 3), ncol = 5)
# ---- Aufgabe 3 ----
# A
?data.frame
data.frame(
Name=c('Ruedi', 'Hans', 'Peter', 'Stefan', 'Julia', 'Maria'),
Alter=c(27, 34, 21, 25, 29, 23),
Note=c(5.0, 6.0, 5.5, 4.0, 3.5, 5.0),
Studium=c(FALSE, TRUE, TRUE, TRUE, FALSE, TRUE)
)
dat <- data.frame(
Name=c('Ruedi', 'Hans', 'Peter', 'Stefan', 'Julia', 'Maria'),
Alter=c(27, 34, 21, 25, 29, 23),
Note=c(5.0, 6.0, 5.5, 4.0, 3.5, 5.0),
Studium=c(FALSE, TRUE, TRUE, TRUE, FALSE, TRUE)
)
dat
nrow(dat)
dim(dat)
pie(table(dat))
pie(table(dat$Alter))
pie(table(dat$Alter), main = 'Alter')
pie(table(dat$Studium), main = 'Studium')
# ---- Aufgabe 4 ----
dat_path <- paste(getwd(), '/data/datDS23t_raw.rds', sep='')
dat_path
dat <- readRDS(dat_path)
dat
str(dat)
nrow(dat)
colnames(dat)
head(dat)
dim(dat)
ncol(dat)
str(dat)
# D
table(dat$Q00_Haarfarbe)
table(dat$Q00_Haarfarbe) / length(dat$Q00_Haarfarbe)
sort(rep(letters, 2))
# E
colors()
# D
tab <- table(dat$Q00_Haarfarbe)
barplot(tab, col=snow3)
barplot(tab, col='snow3')
barplot(tab, col='skyblue3')
# F
tab <- table(dat$Q00_Schlafzimmer)
barplot(tab, col = 'skyblue3', main = 'Schlafzimmer Stockwerk')
?barplot
barplot(tab, col = 'skyblue3', main = 'Schlafzimmer Stockwerk', las=2, ylab='Test')
barplot(tab, col = 'skyblue3', main = 'Schlafzimmer Stockwerk', las=2, ylab='Anzahl')
# G
tab <- table(sort(dat$Q00_Postleitzahl))
barplot(tab)
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 12)
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 1)
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 0.5)
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 0.3)
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 0.5)
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 0.7)
# G
tab <- table(sort(dat$Q00_Postleitzahl))
t
t
t
dat <- readRDS(dat_path)
# ---- Aufgabe 4 ----
dat_path <- paste(getwd(), '/data/datDS23t_raw.rds', sep='')
dat <- readRDS(dat_path)
# G
tab <- table(sort(dat$Q00_Postleitzahl))
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 0.7)
# F
tab <- table(as.numeric(dat$Q00_Schlafzimmer))
# G
tab <- table(sort(as.numeric(dat$Q00_Postleitzahl)))
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 0.7)
# G
tab <- table(sort(as.numeric(dat$Q00_Postleitzahl)))
tab
# G
vec_plz <- sort(as.numeric(dat$Q00_Postleitzahl))
vec_plz
tab <- table()
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 0.7)
tab <- table(vec_plz)
barplot(tab, col = 'skyblue3', ylab = 'Anzahl', cex.names = 0.7)
faithful
#1.Einteilungin"5er"Klassen
# von 40 bis 100 Einteilung in 5er Klassen
# 5 ist die Bin breite (also Klassen breite oder Intervall)
wartezeit<-cut(faithful$waiting,breaks=seq(40,100,5)) # Cut ist nützlich
#2.Häufigkeitin"5er"Klassen
table(wartezeit)
#3. Aufzeichnen
hist(faithful$waiting)
# Relative Häufigkeit -> Fläche des Histograms = 1
# Bin breite * Höhe für alle Balken muss 1 ergeben.
# Relative häufigkeit = Bin breite * Höhe (Density)
hist(faithful$waiting,freq=FALSE)
# Darstellungsoptionen
hist(faithful$waiting,labels=TRUE,xlab="Wartezeit[min]", ylab="AbsoluteHäufigkeit",main="Old-Faithful-Geisir", col="lightblue",ylim=c(0,60))
# Breite der Bins ändern
hist(faithful$waiting,breaks=seq(40,100,10))
# Relative Häufigkeit -> Fläche des Histograms = 1
# Bin breite * Höhe für alle Balken muss 1 ergeben.
# Relative häufigkeit = Bin breite * Höhe (Density)
hist(faithful$waiting,freq=FALSE)
feiertage_ost <- c(20, 26, 21, 23, 21, 22, 22, 20, 20, 20, 20, 21, 24)
feiertage_west <- c(25, 24, 21, 29, 21, 21, 22, 22, 20, 25, 22, 27, 21, 25, 23)
plot(ecdf(feiertage_ost))
plot(ecdf(feiertage_west))
plot(ecdf(feiertage_ost))
plot(ecdf(feiertage_ost), main="Feiertage Osteuropa")
plot(ecdf(feiertage_ost), main="Feiertage Osteuropa")
plot(ecdf(feiertage_west), main="Feiertage Westeuropa")
plot(ecdf(feiertage_ost), main="Feiertage Osteuropa")
source("~/Projects/School-Projects/zhaw/expd-1/Vorl_0510.R")
plot(ecdf(feiertage_ost), main="Feiertage Osteuropa")
plot(ecdf(feiertage_west), main="Feiertage Westeuropa")
income <- c(125000, 60000, rep(24000, 2), rep(15000, 3), 12000, rep(100000, 7))
getmodus(income)
getmode(income)
mean(income)
median(income)
dat_path <- paste(getwd(), '/data/datDS23t_raw.rds', sep='')
dat_path
dat <- readRDS(dat_path)
mean(dat$Q00_Anreisezeit_an_die_ZHAW)
median(dat$Q00_Anreisezeit_an_die_ZHAW)
dat$Q00_Anreisezeit_an_die_ZHAW
dat_path <- paste(getwd(), '/data/datDS23t_raw.rds', sep='', na.rm=TRUE)
dat_path
dat <- readRDS(dat_path)
dat <- readRDS(dat_path, na.rm=TRUE)
mean(dat$Q00_Anreisezeit_an_die_ZHAW, na.rm=TRUE)
median(dat$Q00_Anreisezeit_an_die_ZHAW, na.rm=TRUE)
hist(dat$Q00_Anreisezeit_an_die_ZHAW,labels=TRUE,xlab="Wartezeit[min]", ylab="AbsoluteHäufigkeit",main="Old-Faithful-Geisir", col="lightblue",ylim=c(0,60))
hist(dat$Q00_Anreisezeit_an_die_ZHAW,labels=TRUE,xlab="Wartezeit[min]", ylab="AbsoluteHäufigkeit",main="Old-Faithful-Geisir", col="lightblue",ylim=c(0,7))
hist(dat$Q00_Anreisezeit_an_die_ZHAW,labels=TRUE,xlab="Wartezeit[min]", ylab="AbsoluteHäufigkeit",main="Anreisezeit an die ZHAW", col="lightblue",ylim=c(0,7))
hist(dat$Q00_Anreisezeit_an_die_ZHAW,labels=TRUE,xlab="Anreisezeit[min]", ylab="AbsoluteHäufigkeit",main="Anreisezeit an die ZHAW", col="lightblue",ylim=c(0,7))
hist(dat$Q00_Anreisezeit_an_die_ZHAW,
labels=TRUE,
xlab="Anreisezeit[min]",
ylab="AbsoluteHäufigkeit",
main="Anreisezeit an die ZHAW",
col="lightblue",
ylim=c(0,7),
v=mean(dat$Q00_Anreisezeit_an_die_ZHAW, na.rm=TRUE))
hist(dat$Q00_Anreisezeit_an_die_ZHAW,
labels=TRUE,
xlab="Anreisezeit[min]",
ylab="AbsoluteHäufigkeit",
main="Anreisezeit an die ZHAW",
col="lightblue",
ylim=c(0,7))
hist(dat$Q00_Anreisezeit_an_die_ZHAW,
labels=TRUE,
xlab="Anreisezeit[min]",
ylab="AbsoluteHäufigkeit",
main="Anreisezeit an die ZHAW",
col="lightblue",
ylim=c(0,7))
abline(v = mean(dat$Q00_Anreisezeit_an_die_ZHAW, na.rm = TRUE), col='red', lwd = 3)
abline(v=median(dat$Q00_Anreisezeit_an_die_ZHAW, na.rm=TRUE), col='blue', lwd=3)
